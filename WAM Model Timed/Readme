**************************************************************************
*** Model based on Institut de Rob√≤tica's URDF WAM Models and STL files. Find
them and many more great tools here: http://wiki.iri.upc.edu/index.php/IRI_ROS
*** They were converted to SDF (using Gazebosim) and tweaked by Benjamin Blumer.
*** Plugins written by Benjamin Blumer.
*** BenjaminAaronBlumer@gmail.com
*** The files are licensed under the GPL as specified in each file. This Readme
is also licensed under the GPL.
********************************************************************************
******
    Readme file for an SDF WAM Model and Plugins
    Copyright (C) 2013 Benjamin Aaron Blumer

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

What this package will do for you:
It will let you load a model of Barrett's WAM Arm (http://www.barrett.com/) in
to Gazebo simulator (gazebosim.org). The model will then execute the joint
trajectory in the "forGazebo" file.



This package contains an SDF of IRI's WAM model. It should be used with Gazebo
v. 1.5 or higher. The ROS version of Gazebo, as of this writing, is older. The
model can be used by itself or with the joint controller plugin I've written for
it. The plugin reads joint coordinates (with timestamps) from the file
"forGazebo". The model is commanded to a set of joint positions Gazebo's clock
("Sim Time") reaches the set's timestamp. 

set_joints_timed.cc -- This is the Gazebo plugin that controls the joints. After
modifying this file, you must rebuild plugin.

wam.sdf -- This is an SDF version of IRI's WAM model. It relies on the files
within "meshes" to give it the appropriate visual and collision properties.  To
use the model without the joint controller, simply delete the line "<plugin
name="set_joints_timed" filename="build/libset_joints_timed.so"/>"

model.config tells Gazebo where everything is within this folder.

wam_world.sdf is a demo of how to load the WAM arm using a "World file".  You
can add things to the world file to add other objects, change orientations, and
otherwise tailor a ready-to-go set up.

CMakeList -- is used for compiling the plugin. You shouldn't need to edit it


forGazebo is a sample list of joint coordinates.  There are 8 values per line.
The first is the timestamp, and the following 7 are joint positions
corresponding to the 7 joints 

The script "doit.sh" compiles the plugin. You may need to make the script
executable. To do this, type "chmod +x doit.sh" while in the directory of the
script. 

To get Gazebo to recognize this model and its plugin, you have to set your
Gazebo model path to the correct folder:
On a linux shell: 
  export GAZEBO_MODEL_PATH=location/to/wam/model/folder:$GAZEBO_MODEL_PATH
also set the plugin path:
export GAZEBO_PLUGIN_PATH=location/to/wam/model/folder/WAM\ Model\ Timed:${GAZEBO_PLUGIN_PATH}


QUICK START:

I'm assuming you have Gazebo installed.

1. Add the folders to the environment variables, so that Gazebo knows where to look.
On a linux shell: 
  "export GAZEBO_MODEL_PATH=location/to/wam/model/folder/:$GAZEBO_MODEL_PATH"
  "export GAZEBO_PLUGIN_PATH=location/to/wam/model/folder/WAM\ Model\ Timed:${GAZEBO_PLUGIN_PATH}"
Notice: The model path should point to the folder that contains "WAM Model Timed", 
where as the plugin path should point to the folder itself.

2. Compile the plugins. 
 In a terminal:
 Navigate to WAM Model Timed.
 Make the compiling script executable "chmod +x doit.sh".
 Execute the compiling script "./doit.sh"

5. Run Gazebo and launch the WAM.
 In a different terminal, navigate to WAM Model Timed.
 type "gazebo wam_world.sdf"

After a second, you should see the WAM arm sitting on the ground, and it should start moving to the trajectory given in forGazebo.

